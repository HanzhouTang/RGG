/*	for (int x = 0; x < cells[i][j].size(); x++) {
				for (int y = x + 1; y < cells[i][j].size(); y++) {
					auto a = verts[cells[i][j][x]], b = verts[cells[i][j][y]];
					if (SphereDistance(a,b )< r) {
						lines.push_back(Line(cells[i][j][x], cells[i][j][y]));
						matrix[cells[i][j][x]].insert(cells[i][j][y]);
						matrix[cells[i][j][y]].insert(cells[i][j][x]);
					}
				}
			}
			//先这样写，不行再换
			std::vector<Line> tempLines;
			if (i + 1 < cells.size()) {
				//cells[i + 1][j];
				tempLines = GenSphereLineBySets(cells[i][j], cells[i + 1][j], r, verts, matrix);
				lines.insert(lines.end(), tempLines.begin(), tempLines.end());
			}
			if (j + 1 < cells[i].size()) {
				//cells[i][j+1];
				tempLines = GenSphereLineBySets(cells[i][j], cells[i][j+1], r, verts, matrix);
				lines.insert(lines.end(), tempLines.begin(), tempLines.end());
			}
			if (i - 1 >= 0 && j + 1 < cells[i].size()) {
				//cells[i-1][j+1];
				tempLines = GenSphereLineBySets(cells[i][j], cells[i-1][j + 1], r, verts, matrix);
				lines.insert(lines.end(), tempLines.begin(), tempLines.end());
			}

			if (i + 1 < cells.size() && j + 1 < cells[i].size()) {
				//cells[i+1][j+1];
				tempLines = GenSphereLineBySets(cells[i][j], cells[i + 1][j + 1], r, verts, matrix);
				lines.insert(lines.end(), tempLines.begin(), tempLines.end());
			}*/